BEING WORKED ON:



ABSOLUTELY CRITICAL:

* Lives? Game over?

    The problem with having multiple lives is that when player dies, they have
    no feathers left. If we start the next life with only 3 feathers, in the
    middle of the same (hard) level they were at, then player may be too weak
    in the flapping department, and game may be too hard for lives 2..n
    
    Needs some thought. Maybe collected feathers correspond to lives or health
    and we just call it game over when player dies?


* packaging:
    Binary exe for Windows (use py2exe, pyinstall, ?)
    Check that our source distribution works out of the box on machines
        with python26, (do we rely on external pyglet being installed?)
    Lower priority:
        Binary exe for Mac (not *crucial* for PyWeek, would be nice eventually)
        Can PyInstall create a binary for linux too? That includes correct
        version of Python and dependencies?



REALLY NICE TO HAVE:


* Sound effects.
    Mostly comical quacking and quiet flapping.
    chimes (or quacks?) of of gradually increasing pitch and excitement as the
        player collects consecutive feathers
    Events that need sound:
        enemy spawn: subdued quack
        player collect feather: melodic scale of chings!
        enemy attacked: spluttering quacks
        player attacked: urgent spluttering quacks
        enemy dies: folorn quack
        player dies: really folorn quack
        any bird flaps: flap


* floating numbers on screen for point-scoring events


* try a profiler, see where it bogs down when lots is on screen
    sprite rendering could be batched for performance (see below for sprite
    overhaul)
    This would let us have many birds & MANY feathers in a level.


* load all images in a graphics module at startup, rather than in gameent
  constructor, then create sprites from that.
  (we currently reload images every time we spawn a bird, etc. Presumably
  they are cached, but still)
    * use a single image full of sprites ('spritesheet' in pyglet parlance),
      rather than one image per sprite


* Needs to make each wave harder than the last
     More enemies?
     Smarter enemies?


* improve accuracy of collision detection
    Pixel perfect would be nice, but can we do it in time?
    I wouldn't mind if things (esp birds) had to overlap a smidgeon before they
    were considered to collide. Better that than having a visible gap.


* Enemy behaviour
    Being attacked, should face and move away from the attacker.
    More feathers means:
        They can cruise faster
        They change altitude more rapidly:
        They change altitude more frequently.
        Can flap more frequently
        They flap when approaching from the side
        They chase feathers
        They run when attacked
        They dive when you are above them
        They flap away when you are far above them
    Current 'dive on you' behaviour needs work, it does not account for
    horizontal velocities, so a diving enemy will almost always miss.


* polish the programmer art
    enemies are different color depending on number of feathers
    feathers are the color of the bird they came from? (then you can identify
        your own feathers, which currently are not pick-up-able.)


* Make feather meter look less professional to go with the rest of the graphics
     It also needs a permanent base so that it looks ok when the meter
     is low (black?)


* Combos
    killing an enemy increments multiplier for a few seconds
    display multiplier if it is >1
    attacking an enemy increases duration of current multiplier


* Display instructions (the small text) at wave startup:
    2   Collect feathers for points
        Chain your feather collection


* Key to toggle music.
    Display this in the instructions.


* Clouds
    Do nothing except float across the screen, obscuring what is behind them.
    These aren't as much value as platforms, but sure would be easy to code.
    Maybe introduce a new cloud every three waves


* walking animation when landed
    walking should probably be slightly quicker and more responsive than
    gliding without flaps (but slower than flying with flaps)


* Platforms
    Would be nice
    But is a bunch of work.
    Affects collisions, behaviour, gameplay, graphics, etc.
    Are they worth it?


* High scores
    Displayed after user dies, until next game starts
    Persisted, in 'All Users/AppData' or equivalent



NOT BEING DONE

* Collecting feathers improves flap power - don't like this on reflection.
    It makes control of the player very icky if flap_power is a variable
    amount. (or at least I couldn't find the right combo of values)
    Plus, it makes balancing enemy AI harder if they have to account for
    variable flap power.

