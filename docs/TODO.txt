
CURRENT TASK:


FEATURES

Hudscores are a bit ugly, consider changing font and tweaking fontsizes.

Hudscores (or something) seemed slow when I spawned many feathers.

Enemy ducks should not collect feathers, it's just annoying.

Lives
* store on Game
* HUD: display lives remaining
* dying decrements number of lives
* game over on 0
* back to titles after game over

fullscreen mode
* button to toggle it
* persist it between runs

Difficulty/gameplay tuning
* Player dies rather than losing feathers
* OR Player collects up to 3 'shield feathers', which need a HUD

Current enemy attacking 'dive on you' behaviour needs work. In particular, it
does not account for horizontal velocities, so a diving enemy will almost
always miss. Should only dive if higher than player (diving away when below is
just annoying)

Some Birds in higher waves have more behaviours available to them:
* fly faster

* Extra lives after X points?

* hudscore should use ',' as thousands separator

* Enemy ducks should hold down flap a tad longer than they do

More sound effects reqd:
* player attacked: urgent cries
* birds bounce off harmlessly at equal heights
* Game over
* Extra life

Only show fps in performance test mode, or when outside acceptable range.

Combos
* HUD: display multiplier
* killing an enemy increments multiplier
* multiplier reduces back to 1 over time
* feather scores are multiplied by this

Control
* Holding down flap lets you glide? (if speed is high enough?)
* Holding down very briefly produces a weaker flap?

High scores?
* Displayed after user dies, until next game starts
* Persisted

Binary exe for Mac

Binary exe for Linux



BUGS

fuzzy line along top of rotated sprites, introduced when I started using
a texture atlas

rotation of player bird goes screwy at high velocity

pressing 'alt' hangs the game until you press it again??? (jlappy/winxp)

Some people do not get vsync. Can we enforce this? Or busy wait? Or make game
speed dependant on frame rate?

Audio does not work properly on ALSA on my ubuntu (crashes on 32nd play of flap)
* is this an ALSA limitation - does it work if I install and use OpenAL?
* can we fix this with better use of pyglet API? Review how many media players
  we create, etc. 'flap' used to create a new one for each play, does it still?

Review the bugs people reported in pyweek

If errors occur in audio, we should catch and run silent
    - if no audio device: OK, handled
    - if wrong driver selected: not handled



REFACTOR

Are hudscores slow? Do they re-render the label every time we change its
color? Can we prevent that, but still render the label with decreasing
alpha over time?

review what happens in worlditem.on_collide()

Refactor collision response code. Don't currently like how response to a
single collision is split between both protagonists and their base classes.
Maybe collision detection should not immediately invoke collision response,
but should leave a collection of touching worlditems on each item. Then
it is up to the item's to respond to that in update() ??? THINK about this
before implementing. Maybe each worlditem defines a list of other worlditem
classes that it cares about colliding with?

Consider that a worlditem has-a spriteholder, rather than is-a spriteitem.

Similarly, huditems have-a labelholder. hudtitle has two.
Can we now generalise all huditems to be instances of labelholder? And
a huditem has-a labelholder?

move 'build-mswin-dist.py' to 'setup.py', think about adding a makefile
or make-bin.bat which invokes it with the correct args.

Can fps display be put into render.batch as well?

Behaviour code is a bit wonky. Examine the state maching inthe Python
Game book to see if it could be better that way.



NOT BEING DONE

Enemy behaviour. Smarter enemies should:
* face and move away when attacked
* cruise faster
* change altitude / direction more frequently
* flap to get higher than you when approaching from the side (unless you
  are behind them)
* run when attacked
* dive & move away when you are above them
* produce more feathers when dead

walking animation when landed should probably be slightly quicker and more
responsive than gliding without flaps (but slower than flying with flaps)

wraparound without disappearing - requires drawing things twice if they are off
edge of screen, and doing collision detection on the dual locations.

Clouds
    Do nothing except float across the screen, obscuring what is behind them.
    These aren't as much value as platforms, but sure would be easy to code.
    Maybe introduce a new cloud every three waves

Platforms
    Would be nice
    But is a bunch of work.
    Affects collisions, behaviour, gameplay, graphics, etc.
    Are they worth it?

Collecting feathers improves flap power - don't like this on reflection.
    It makes control of the player very icky if flap_power is a variable
    amount. (or at least I couldn't find the right combo of values)
    Plus, it makes balancing enemy AI harder if they have to account for
    variable flap power.

